{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "a5e3318276338a852528f8cfe6fcdbd9",
    "entities": [
      {
        "tableName": "user_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` INTEGER PRIMARY KEY AUTOINCREMENT, `first_name` TEXT, `last_name` TEXT, `birth_date` INTEGER, `addressID` INTEGER, `city` TEXT, `street` TEXT, `post_code` INTEGER, `wordID` INTEGER, `word` TEXT)",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "first_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "last_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "birthDate",
            "columnName": "birth_date",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "address.addressID",
            "columnName": "addressID",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "address.city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.street",
            "columnName": "street",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.postCode",
            "columnName": "post_code",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "secretWord.wordID",
            "columnName": "wordID",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "secretWord.word",
            "columnName": "word",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "user_id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "address_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addressID` INTEGER PRIMARY KEY AUTOINCREMENT, `city` TEXT, `street` TEXT, `post_code` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "addressID",
            "columnName": "addressID",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "street",
            "columnName": "street",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postCode",
            "columnName": "post_code",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "addressID"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "words_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`wordID` INTEGER PRIMARY KEY AUTOINCREMENT, `word` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "wordID",
            "columnName": "wordID",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "word",
            "columnName": "word",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "wordID"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "library_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`libraryId` INTEGER PRIMARY KEY AUTOINCREMENT, `title` TEXT NOT NULL, `userOwnerId` INTEGER NOT NULL, FOREIGN KEY(`userOwnerId`) REFERENCES `user_table`(`user_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "libraryId",
            "columnName": "libraryId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userOwnerId",
            "columnName": "userOwnerId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "libraryId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_library_table_userOwnerId",
            "unique": false,
            "columnNames": [
              "userOwnerId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_library_table_userOwnerId` ON `${TABLE_NAME}` (`userOwnerId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user_table",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userOwnerId"
            ],
            "referencedColumns": [
              "user_id"
            ]
          }
        ]
      },
      {
        "tableName": "playlist_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`playlistId` INTEGER PRIMARY KEY AUTOINCREMENT, `userCreatorId` INTEGER NOT NULL, `playlistName` TEXT NOT NULL, FOREIGN KEY(`userCreatorId`) REFERENCES `user_table`(`user_id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "userCreatorId",
            "columnName": "userCreatorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playlistName",
            "columnName": "playlistName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "playlistId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_playlist_table_userCreatorId",
            "unique": false,
            "columnNames": [
              "userCreatorId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_playlist_table_userCreatorId` ON `${TABLE_NAME}` (`userCreatorId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user_table",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userCreatorId"
            ],
            "referencedColumns": [
              "user_id"
            ]
          }
        ]
      },
      {
        "tableName": "songs_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` INTEGER PRIMARY KEY AUTOINCREMENT, `song_name` TEXT NOT NULL, `artist` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "songName",
            "columnName": "song_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artist",
            "columnName": "artist",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "songId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PlaylistSongCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`playlistId` INTEGER NOT NULL, `songId` INTEGER NOT NULL, PRIMARY KEY(`playlistId`, `songId`), FOREIGN KEY(`playlistId`) REFERENCES `playlist_table`(`playlistId`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`songId`) REFERENCES `songs_table`(`songId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "playlistId",
            "songId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PlaylistSongCrossRef_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PlaylistSongCrossRef_songId` ON `${TABLE_NAME}` (`songId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "playlist_table",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "playlistId"
            ],
            "referencedColumns": [
              "playlistId"
            ]
          },
          {
            "table": "songs_table",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "songId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'a5e3318276338a852528f8cfe6fcdbd9')"
    ]
  }
}